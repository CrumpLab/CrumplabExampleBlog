[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The content on this page is from about.qmd. Edit that file to change how this page looks.\n“About” pages are special quarto template pages, with multiple options: https://quarto.org/docs/websites/website-about.html.\nTry changing the template type from jolla to one of the other options for a different look and feel."
  },
  {
    "objectID": "changes.html",
    "href": "changes.html",
    "title": "Changes",
    "section": "",
    "text": "This file will attempt to keep track of structural changes to this site to provide examples of modification options. See also the quarto website documentation for more help.\nThis blog was initialized as a quarto blog project using Rstudio, and then turned into a github template available here https://github.com/CrumpLab/quartoCourseBlog.\nInitial changes were making a new post in the posts folder."
  },
  {
    "objectID": "changes.html#changes.qmd",
    "href": "changes.html#changes.qmd",
    "title": "Changes",
    "section": "changes.qmd",
    "text": "changes.qmd\nThis page is not a regular blog post, instead it has been added as a new page to the top level navigation of the website.\nTo add this page the file changes.qmd was created in the root director. Next, the _quarto.yml was modified to add this page to the top-level navigation.\nThe original yml file had this text:\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"quartoCourseBlog\"\n  navbar:\n    right:\n      - about.qmd\n      - icon: github\n        href: https://github.com/CrumpLab/quartoCourseBlog\n      - icon: twitter\n        href: https://twitter.com/MattCrumpLab\nformat:\n  html:\n    theme: minty\n    css: styles.css\n\neditor: visual\nI wanted this page to appear on the left side, so under the navbar section I added left, and a new entry for changes.qmd.\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"quartoCourseBlog\"\n  navbar:\n    left:\n      - changes.qmd\n    right:\n      - about.qmd\n      - icon: github\n        href: https://github.com/CrumpLab/quartoCourseBlog\n      - icon: twitter\n        href: https://twitter.com/MattCrumpLab\nformat:\n  html:\n    theme: minty\n    css: styles.css\n\neditor: visual"
  },
  {
    "objectID": "changes.html#blog-title",
    "href": "changes.html#blog-title",
    "title": "Changes",
    "section": "Blog title",
    "text": "Blog title\nThe template gives the default name “quartoCourseBlog”. I changed this to “CrumpLabExampleBlog” in two files:\n\n_quarto.yml - changed the title field\n\nFrom:\nwebsite:\n  title: \"quartoCourseBlog\"\nTo:\nwebsite:\n  title: \"CrumpLabExampleBlog\"\nNotice, this changes the title in the top-level navigation, but does not change the larger bolded title in the header of the page.\n\n\nindex.qmd - change title field in the top-level yaml.\n\nFrom:\n---\ntitle: \"quartoCourseBlog\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  image-placeholder: \"images/logo.png\"\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full\ntitle-block-banner: true\n---\nTo:\n---\ntitle: \"CrumpLabExampleBlog\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  image-placeholder: \"images/logo.png\"\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full\ntitle-block-banner: true\n---\nNow the title in the navigation is the same as the title in the header for the page."
  },
  {
    "objectID": "changes.html#remove-title-block",
    "href": "changes.html#remove-title-block",
    "title": "Changes",
    "section": "Remove title block",
    "text": "Remove title block\nThe large block of green space with the blog title is called the title-block-banner, and this is an option in the yaml for index.qmd. Setting the option to false removes the title block.\n---\ntitle: \"CrumpLabExampleBlog\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  image-placeholder: \"images/logo.png\"\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full\ntitle-block-banner: false\n---"
  },
  {
    "objectID": "changes.html#change-default-image",
    "href": "changes.html#change-default-image",
    "title": "Changes",
    "section": "Change default image",
    "text": "Change default image\nThe index.qmd file in the root folder has a line:\nimage-placeholder: \"images/logo.png\"\nI changed replaced the file in images/logo.png with a different file to change the image. I could have put a different image in that folder, and then changed the name in the yaml as well."
  },
  {
    "objectID": "changes.html#make-sure-github-icon-links-to-correct-github-repo",
    "href": "changes.html#make-sure-github-icon-links-to-correct-github-repo",
    "title": "Changes",
    "section": "Make sure github icon links to correct github repo",
    "text": "Make sure github icon links to correct github repo\nChange the href for the github entry to the url for your github repository.\nwebsite:\n  title: \"CrumpLabExampleBlog\"\n  navbar:\n    left:\n      - changes.qmd\n    right:\n      - about.qmd\n      - icon: github\n        href: https://github.com/CrumpLab/CrumplabExampleBlog\n      - icon: twitter\n        href: https://twitter.com/MattCrumpLab"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CrumpLabExampleBlog",
    "section": "",
    "text": "Data Tidying\n\n\n\n\n\n\n\n\n\n\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nVideo game review report\n\n\n\n\n\n\n\n\n\n\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nWeek 8: data relations\n\n\n\n\n\n\n\n\n\n\n\n\nMar 20, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nweek 7: more ggplot\n\n\n\n\n\n\n\n\n\n\n\n\nMar 13, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nWeek 6 Data Summary\n\n\n\n\n\n\n\n\n\n\n\n\nMar 6, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nWeek 5 data import\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 27, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nWeek 4 Datavis\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 21, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nMidterm Help\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 21, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nLogic, loops, and functions\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 21, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nWeek 3 qmd skills\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 8, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nRunning the jspsych tutorial code on a quarto blog\n\n\n\n\n\n\n\nPsyc 2002\n\n\njspsych\n\n\n\n\n\n\n\n\n\n\n\nFeb 6, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nMy tip sheet for week 2\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 1, 2023\n\n\nMatt Crump\n\n\n\n\n\n\n  \n\n\n\n\nFirst post and learning by examples\n\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2023\n\n\nMatt Crump\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "pages/new_page.html",
    "href": "pages/new_page.html",
    "title": "Some new page",
    "section": "",
    "text": "Some references"
  },
  {
    "objectID": "posts/PSYC_2002_01_jspsych/index.html",
    "href": "posts/PSYC_2002_01_jspsych/index.html",
    "title": "Running the jspsych tutorial code on a quarto blog",
    "section": "",
    "text": "This is a minimal example showing how to serve the jspsych tutorial code on a quarto blog using github pages.\nJspsych is a javascript library for coding online cognitive/behavioral experiments De Leeuw (2015).\nThe tutorial example code is for creating a simple reaction time task with jspsych, and can be found here https://www.jspsych.org/7.3/tutorials/rt-task/#the-final-code.\nThe general concept to running this on a quarto blog with github pages involve the following general steps\nSteps in quarto:\nWhen you render the blog the last step is make sure that the contents of jspsych_tutorial is copied into the docs folder so you can access it from the web. This is possible by including a resources entry with a pointer to the folder in the yaml for your blog post.\nFor example, the yaml at the top of this blog post entry is:\nAt this point you should be able to render the blog and push it to github. You can check that the jspsych tutorial assets are in the docs folder, they should be in docs/posts/yourpost/"
  },
  {
    "objectID": "posts/PSYC_2002_01_jspsych/index.html#linking-to-the-tutorial",
    "href": "posts/PSYC_2002_01_jspsych/index.html#linking-to-the-tutorial",
    "title": "Running the jspsych tutorial code on a quarto blog",
    "section": "Linking to the tutorial",
    "text": "Linking to the tutorial\nThe next step is to link to the tutorial folder. Because we named the main file index.html, we don’t have to specify which file to load because the browser will automatically load the index file.\nhttps://crumplab.com/CrumplabExampleBlog/posts/PSYC_2002_01_jspsych/jspsych_tutorial/"
  },
  {
    "objectID": "posts/PSYC_2002_01_jspsych/index.html#hyman-1953",
    "href": "posts/PSYC_2002_01_jspsych/index.html#hyman-1953",
    "title": "Running the jspsych tutorial code on a quarto blog",
    "section": "Hyman (1953)",
    "text": "Hyman (1953)"
  },
  {
    "objectID": "posts/PSYC_2002_01_jspsych/index.html#make-condition-1",
    "href": "posts/PSYC_2002_01_jspsych/index.html#make-condition-1",
    "title": "Running the jspsych tutorial code on a quarto blog",
    "section": "Make Condition 1",
    "text": "Make Condition 1\nHyman_1.html works\n\nNeed to counterbalance which circle happens 9/10 times."
  },
  {
    "objectID": "posts/PSYC_2002_01_jspsych/index.html#make-condition-2",
    "href": "posts/PSYC_2002_01_jspsych/index.html#make-condition-2",
    "title": "Running the jspsych tutorial code on a quarto blog",
    "section": "Make Condition 2",
    "text": "Make Condition 2\nHyman_2.html works\n\nNeed to counterbalance which circle happens 8/10 times."
  },
  {
    "objectID": "posts/PSYC_2002_01_jspsych/index.html#make-condition-3",
    "href": "posts/PSYC_2002_01_jspsych/index.html#make-condition-3",
    "title": "Running the jspsych tutorial code on a quarto blog",
    "section": "Make Condition 3",
    "text": "Make Condition 3\n\nNeed to make four possible stimuli\nNeed to make font bigger, for letters"
  },
  {
    "objectID": "posts/Week4_Datavis/index.html",
    "href": "posts/Week4_Datavis/index.html",
    "title": "Week 4 Datavis",
    "section": "",
    "text": "Get some data in tidy data format\nUnderstand what kind of data types you have in the dataframe so you can plot it appropriately\nGraph the data with ggplot2\n\n\n#loads ggplot2, and some example data sets\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n# the starwars data is loaded by tidyverse\n# assign the starwars dataset to a variable name\nstarwars_copy &lt;- starwars\n\n# check out some of the datatypes\nhead(starwars_copy)\n\n# A tibble: 6 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  \n1 Luke Skywal…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n2 C-3PO           167    75 &lt;NA&gt;    gold    yellow    112   none  mascu… Tatooi…\n3 R2-D2            96    32 &lt;NA&gt;    white,… red        33   none  mascu… Naboo  \n4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n5 Leia Organa     150    49 brown   light   brown      19   fema… femin… Aldera…\n6 Owen Lars       178   120 brown,… light   blue       52   male  mascu… Tatooi…\n# … with 4 more variables: species &lt;chr&gt;, films &lt;list&gt;, vehicles &lt;list&gt;,\n#   starships &lt;list&gt;, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nclass(starwars_copy$name)\n\n[1] \"character\"\n\nclass(starwars_copy$height)\n\n[1] \"integer\"\n\nclass(starwars_copy$mass)\n\n[1] \"numeric\"\n\nclass(starwars_copy$homeworld)\n\n[1] \"character\"\n\n# plot some variables\nggplot(data = starwars_copy,\n       mapping = aes(x=height,y=mass) )+\n  geom_point()\n\nWarning: Removed 28 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/Week4_Datavis/index.html#a-quick-demo",
    "href": "posts/Week4_Datavis/index.html#a-quick-demo",
    "title": "Week 4 Datavis",
    "section": "",
    "text": "Get some data in tidy data format\nUnderstand what kind of data types you have in the dataframe so you can plot it appropriately\nGraph the data with ggplot2\n\n\n#loads ggplot2, and some example data sets\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n# the starwars data is loaded by tidyverse\n# assign the starwars dataset to a variable name\nstarwars_copy &lt;- starwars\n\n# check out some of the datatypes\nhead(starwars_copy)\n\n# A tibble: 6 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  \n1 Luke Skywal…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n2 C-3PO           167    75 &lt;NA&gt;    gold    yellow    112   none  mascu… Tatooi…\n3 R2-D2            96    32 &lt;NA&gt;    white,… red        33   none  mascu… Naboo  \n4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n5 Leia Organa     150    49 brown   light   brown      19   fema… femin… Aldera…\n6 Owen Lars       178   120 brown,… light   blue       52   male  mascu… Tatooi…\n# … with 4 more variables: species &lt;chr&gt;, films &lt;list&gt;, vehicles &lt;list&gt;,\n#   starships &lt;list&gt;, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nclass(starwars_copy$name)\n\n[1] \"character\"\n\nclass(starwars_copy$height)\n\n[1] \"integer\"\n\nclass(starwars_copy$mass)\n\n[1] \"numeric\"\n\nclass(starwars_copy$homeworld)\n\n[1] \"character\"\n\n# plot some variables\nggplot(data = starwars_copy,\n       mapping = aes(x=height,y=mass) )+\n  geom_point()\n\nWarning: Removed 28 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/Week4_Datavis/index.html#data-types",
    "href": "posts/Week4_Datavis/index.html#data-types",
    "title": "Week 4 Datavis",
    "section": "Data-types",
    "text": "Data-types\nWhat is in a name?\nEverything is a function.\n\nObject assignment\nThis is one of the simplest things you could do in R. What is happening here?\n\na is the name of a new object that is being created\n&lt;- is the assignment operator. It looks like an arrow, with the 1 going into the a\n1 is an object that is being assigned into a\nconsequences: a new object with the name a is created. This new object has been assigned the content 1.\n\n\n# assign 1 to object named a\na &lt;- 1\n1 -&gt; b\n\nf &lt;- 4 -&gt; g\n\n\n# look at the data type of object in a\nclass(a)\n\n[1] \"numeric\"\n\ntypeof(a)\n\n[1] \"double\"\n\n\n\n\nKinds of data types\n\nIntegers\n\n#integers (no decimals)\n# L specifies integer\ntypeof(1L) \n\n[1] \"integer\"\n\nclass(1L)\n\n[1] \"integer\"\n\nis.integer(1L)\n\n[1] TRUE\n\nas.integer(1.1) # coerces to integer\n\n[1] 1\n\nas.integer(1.5) # rounds down\n\n[1] 1\n\nas.integer(1.9) # rounds down\n\n[1] 1\n\ninteger(length = 5) #initialize a vector for integers\n\n[1] 0 0 0 0 0\n\nis.integer(as.integer(1:5))\n\n[1] TRUE\n\n\n\n\nNumeric/doubles\n\n# decimal numbers\n# numbers without decimals default to numeric\ntypeof(1) \n\n[1] \"double\"\n\nclass(1)\n\n[1] \"numeric\"\n\nis.numeric(1)\n\n[1] TRUE\n\nas.numeric(1L) # coerces integer to numeric\n\n[1] 1\n\nnumeric(length = 5) #initialize a vector for doubles\n\n[1] 0 0 0 0 0\n\n\n\n\nCharacter\nAny text between quotes get’s treated as a character string\n\ntypeof(\"1\") \n\n[1] \"character\"\n\nclass(\"1\")\n\n[1] \"character\"\n\nis.character(\"1\")\n\n[1] TRUE\n\nas.character(1) # coerces numeric to character\n\n[1] \"1\"\n\ncharacter(length = 5) #initialize a vector for character strings\n\n[1] \"\" \"\" \"\" \"\" \"\"\n\n\n\n\nLogical/Boolean\nUppercase TRUE, or FALSE makes logical (binary) variables\n\ntypeof(TRUE)\n\n[1] \"logical\"\n\nclass(TRUE)\n\n[1] \"logical\"\n\nis.logical(FALSE)\n\n[1] TRUE\n\nas.logical(1) # coerces 1 to TRUE\n\n[1] TRUE\n\nas.logical(0) # coerces 0  to FALSE\n\n[1] FALSE\n\nlogical(length = 5) # initialize a logical vector\n\n[1] FALSE FALSE FALSE FALSE FALSE\n\n\n\n\n\nObject types\nR has many object types to store individual elements, or collections of elements.\n\n\nVector\n\n# makes a vector with one thing in it\none_thing &lt;- 1\ntwo_things &lt;- c(1,2) \nmany_things &lt;- 1:100\n\n\n\ndata.frame\nA table with rows and columns.\n\nmy_df &lt;- data.frame(a = 1:5,\n                    b = c(\"one\",\"two\",\"three\",\"four\",\"five\"),\n                    random = runif(5,0,1))\n#print to see it\nmy_df\n\n  a     b    random\n1 1   one 0.4032073\n2 2   two 0.1557925\n3 3 three 0.2199378\n4 4  four 0.3859071\n5 5  five 0.5663455\n\n# access columns with $\nmy_df$a == 1:5\n\n[1] TRUE TRUE TRUE TRUE TRUE\n\nmy_df$b\n\n[1] \"one\"   \"two\"   \"three\" \"four\"  \"five\" \n\n## access rows or columns with [row,column]\nmy_df[1,] # row 1, all columns\n\n  a   b    random\n1 1 one 0.4032073\n\nmy_df[,1] # column 1, all rows\n\n[1] 1 2 3 4 5\n\nmy_df[1:2,] # rows 1 to 2, all columns\n\n  a   b    random\n1 1 one 0.4032073\n2 2 two 0.1557925\n\nmy_df[1:2, 3] # rows 1 to 2, but only for column 3\n\n[1] 0.4032073 0.1557925\n\n\n\n\nTibble\nA table with rows and columns.\n\nmy_df &lt;- tibble(a = 1:5,\n                    b = c(\"one\",\"two\",\"three\",\"four\",\"five\"),\n                    random = runif(5,0,1))\n#print to see it\nmy_df\n\n# A tibble: 5 × 3\n      a b     random\n  &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     1 one    0.882\n2     2 two    0.156\n3     3 three  0.752\n4     4 four   0.863\n5     5 five   0.767\n\n# access columns with $\nmy_df$a\n\n[1] 1 2 3 4 5\n\nmy_df$b\n\n[1] \"one\"   \"two\"   \"three\" \"four\"  \"five\" \n\n## access rows or columns with [row,column]\nmy_df[1,] # row 1, all columns\n\n# A tibble: 1 × 3\n      a b     random\n  &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     1 one    0.882\n\nmy_df[,1] # column 1, all rows\n\n# A tibble: 5 × 1\n      a\n  &lt;int&gt;\n1     1\n2     2\n3     3\n4     4\n5     5\n\nmy_df[1:2,] # rows 1 to 2, all columns\n\n# A tibble: 2 × 3\n      a b     random\n  &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     1 one    0.882\n2     2 two    0.156\n\nmy_df[1:2, 3] # rows 1 to 2, but only for column 3\n\n# A tibble: 2 × 1\n  random\n   &lt;dbl&gt;\n1  0.882\n2  0.156\n\nmy_df\n\n# A tibble: 5 × 3\n      a b     random\n  &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     1 one    0.882\n2     2 two    0.156\n3     3 three  0.752\n4     4 four   0.863\n5     5 five   0.767\n\n\n\n\nlists"
  },
  {
    "objectID": "posts/Week4_Datavis/index.html#tidy-data",
    "href": "posts/Week4_Datavis/index.html#tidy-data",
    "title": "Week 4 Datavis",
    "section": "Tidy data",
    "text": "Tidy data\nTidy data codes observations in a table. Each observation has its own row. The columns contain characteristics of the observation. For example, a demographics table could have one row per person, and several columns describing features of the person. Or, an expriment may involve multiple measures of a dependent variable across people and conditions of an independent variable. In this case, each row would contain one measurement, and each column would code the conditions associated with the measurement.\nAn example of wide vs. long data. In this example, the long-data is in tidy format. The accuracy measure is the dependent variable, and there is one row per measurement.\nhttps://crumplab.com/programmingforpsych/dealing-with-data.html#standard-data-formats"
  },
  {
    "objectID": "posts/Week4_Datavis/index.html#ggplot2",
    "href": "posts/Week4_Datavis/index.html#ggplot2",
    "title": "Week 4 Datavis",
    "section": "ggplot2",
    "text": "ggplot2\n\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nsurvey_data &lt;- read_csv(\"https://psyteachr.github.io/ads-v2/data/survey_data.csv\")\n\nRows: 707 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): caller_id, employee_id, issue_category\ndbl  (3): wait_time, call_time, satisfaction\ndttm (1): call_start\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(survey_data)\n\n# A tibble: 6 × 7\n  caller_id employee_id call_start          wait_time call_time issue_…¹ satis…²\n  &lt;chr&gt;     &lt;chr&gt;       &lt;dttm&gt;                  &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 C001      E01         2020-09-22 10:47:54       169        34 tech           3\n2 C002      E01         2020-09-07 22:10:25       206        52 tech           2\n3 C003      E01         2020-07-06 12:08:59       207        41 tech           2\n4 C004      E01         2020-02-20 13:12:03       132        16 tech           4\n5 C005      E01         2020-11-08 17:42:10       178        20 returns        3\n6 C006      E01         2020-06-01 19:06:12       230        46 returns        2\n# … with abbreviated variable names ¹​issue_category, ²​satisfaction\n\nggplot()\n\n\n\nggplot(data = survey_data,\n       mapping = aes(x = wait_time,\n                     y = satisfaction)\n       )\n\n\n\nggplot(survey_data, aes(x = wait_time, y = satisfaction))\n\n\n\nggplot(survey_data, \n       aes(x = wait_time, \n           y = satisfaction)) + \n  geom_point()\n\n\n\nggplot(survey_data, \n       aes(x = wait_time, \n           y = satisfaction)) + \n  geom_point(color=\"red\")\n\n\n\nggplot(survey_data, \n       aes(x = wait_time, \n           y = satisfaction)) + \n  geom_point(color=\"black\", size = 5) +\n   geom_point(color=\"#fa2fcb\", size = 4) +\n  geom_smooth(method =\"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nggplot(survey_data, \n       aes(x = wait_time, \n           y = satisfaction,\n           color = wait_time,\n           size = satisfaction)) + \n  geom_point()\n\n\n\nmin(survey_data$wait_time)\n\n[1] 23\n\nmax(survey_data$wait_time)\n\n[1] 314\n\nlength(survey_data$wait_time)\n\n[1] 707\n\nggplot(data=survey_data, mapping= aes(x=wait_time))+\n  geom_histogram(bins=50, color=\"red\") +\n  theme_classic()"
  },
  {
    "objectID": "posts/Week4_Datavis/index.html#change-figure-output-size",
    "href": "posts/Week4_Datavis/index.html#change-figure-output-size",
    "title": "Week 4 Datavis",
    "section": "change figure output size",
    "text": "change figure output size\n\nggplot(data=survey_data, mapping= aes(x=wait_time))+\n  geom_histogram(bins=50, color=\"red\") +\n  theme_classic()"
  },
  {
    "objectID": "posts/Week4_Datavis/index.html#random-stuff-i-did-in-class",
    "href": "posts/Week4_Datavis/index.html#random-stuff-i-did-in-class",
    "title": "Week 4 Datavis",
    "section": "Random stuff I did in class",
    "text": "Random stuff I did in class\n\ntypeof(10.0245435234534)\n\n[1] \"double\"\n\ntypeof(10L)\n\n[1] \"integer\"\n\ntypeof(10)\n\n[1] \"double\"\n\ntypeof(\"1\")\n\n[1] \"character\"\n\n\"one\" &lt; \"two\"\n\n[1] TRUE\n\n\"z\" &lt; \"w\"\n\n[1] FALSE\n\nis.numeric(10)\n\n[1] TRUE\n\nis.numeric(\"1\")\n\n[1] FALSE\n\na &lt;- c(1,2,3)\nis.numeric(a)\n\n[1] TRUE\n\nis.numeric(starwars$name)\n\n[1] FALSE\n\nis.numeric(starwars$mass)\n\n[1] TRUE\n\nis.numeric(starwars$height)\n\n[1] TRUE\n\nis.integer(starwars$height)\n\n[1] TRUE\n\nclass(starwars$height)\n\n[1] \"integer\"\n\nhead(starwars)\n\n# A tibble: 6 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  \n1 Luke Skywal…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n2 C-3PO           167    75 &lt;NA&gt;    gold    yellow    112   none  mascu… Tatooi…\n3 R2-D2            96    32 &lt;NA&gt;    white,… red        33   none  mascu… Naboo  \n4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n5 Leia Organa     150    49 brown   light   brown      19   fema… femin… Aldera…\n6 Owen Lars       178   120 brown,… light   blue       52   male  mascu… Tatooi…\n# … with 4 more variables: species &lt;chr&gt;, films &lt;list&gt;, vehicles &lt;list&gt;,\n#   starships &lt;list&gt;, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nclass(starwars)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nclass(starwars_copy)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nlibrary(tidyverse)\n\nclass(starwars)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nstarwars\n\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   &lt;chr&gt;        &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 &lt;NA&gt;    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 &lt;NA&gt;    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 &lt;NA&gt;    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nstarwars_copy &lt;- starwars\n\n\nsurvey_data &lt;- read_csv(\"https://psyteachr.github.io/ads-v2/data/survey_data.csv\")\n\nRows: 707 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): caller_id, employee_id, issue_category\ndbl  (3): wait_time, call_time, satisfaction\ndttm (1): call_start\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "posts/first_post/index.html",
    "href": "posts/first_post/index.html",
    "title": "First post and learning by examples",
    "section": "",
    "text": "It is February 6th, 2023; and, this is an example quarto blog for students in my classes.\nThe purpose of this blog is to provide working examples of source code and other files showing how to implement various quarto and/or R functionality.\nI expect this blog will mostly be for students in PSYC 3470, but there will likely be additional blog posts for students in other classes or conducting research in the lab.\nThe source code for this repository can be viewed on github.\nMany of the contributions to this blog will be new posts. However, many other changes are possible, including adding whole new pages. A quarto blog is a special case of a quarto website and can easily be expanded with any quarto website feature. My plan is to keep the expansions relatively simple, and to document changes that I make on the changes page to show more working examples."
  },
  {
    "objectID": "posts/midterm_help/index.html",
    "href": "posts/midterm_help/index.html",
    "title": "Midterm Help",
    "section": "",
    "text": "sum(1:100)\n\n[1] 5050\n\n#1+2+3+4\n\na &lt;- 0\n\nfor(i in 1:100){\n  a &lt;- a+i\n}\n\na\n\n[1] 5050\n\n\nWrite a function to find the sum of all integers between any two values.\nfunction_name &lt;- function(input_name){\n  #body where you modify input\n  return(name_of_output)\n}\n\n# running the function\nfunction_name(some_input)\n\nsum(50:100)\n\n[1] 3825\n\nsum(500:1000)\n\n[1] 375750\n\nsum_sequence &lt;- function(min,max){\n\n  return(sum(min:max))\n  \n}\n\nsum_sequence(min = 5, max = 100)\n\n[1] 5040\n\nsum_sequence_loop &lt;- function(min,max){\n  \n  a &lt;- 0\n  \n  for(i in min:max){\n    a &lt;- a+i\n  }\n  \n  return(a)\n  \n}\n\nsum_sequence_loop(1,10)\n\n[1] 55\n\n\nGenerate 100 random numbers\n\n?runif\n\n random_numbers &lt;-runif(n = 1000,min=0,max=1000)\n \n hist(random_numbers)\n\n\n\n  normal_numbers &lt;-rnorm(n = 1000,0,10)\n \n hist(normal_numbers)\n\n\n\n sample(1:6, 1)\n\n[1] 2\n\n\n\n\n\nfor(i in 1:100) {\n  if(i %% 3 == 0 & i %% 5 == 0) {\n    print(\"FizzBuzz\")\n  } else if(i %% 3 == 0) {\n    print(\"Fizz\")\n  } else if(i %% 5 == 0) {\n    print(\"Buzz\")\n  } else {\n    print(i)\n  }\n}\n\n[1] 1\n[1] 2\n[1] \"Fizz\"\n[1] 4\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 7\n[1] 8\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 11\n[1] \"Fizz\"\n[1] 13\n[1] 14\n[1] \"FizzBuzz\"\n[1] 16\n[1] 17\n[1] \"Fizz\"\n[1] 19\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 22\n[1] 23\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 26\n[1] \"Fizz\"\n[1] 28\n[1] 29\n[1] \"FizzBuzz\"\n[1] 31\n[1] 32\n[1] \"Fizz\"\n[1] 34\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 37\n[1] 38\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 41\n[1] \"Fizz\"\n[1] 43\n[1] 44\n[1] \"FizzBuzz\"\n[1] 46\n[1] 47\n[1] \"Fizz\"\n[1] 49\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 52\n[1] 53\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 56\n[1] \"Fizz\"\n[1] 58\n[1] 59\n[1] \"FizzBuzz\"\n[1] 61\n[1] 62\n[1] \"Fizz\"\n[1] 64\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 67\n[1] 68\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 71\n[1] \"Fizz\"\n[1] 73\n[1] 74\n[1] \"FizzBuzz\"\n[1] 76\n[1] 77\n[1] \"Fizz\"\n[1] 79\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 82\n[1] 83\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 86\n[1] \"Fizz\"\n[1] 88\n[1] 89\n[1] \"FizzBuzz\"\n[1] 91\n[1] 92\n[1] \"Fizz\"\n[1] 94\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 97\n[1] 98\n[1] \"Fizz\"\n[1] \"Buzz\""
  },
  {
    "objectID": "posts/midterm_help/index.html#solve-fizz-buzz-problem",
    "href": "posts/midterm_help/index.html#solve-fizz-buzz-problem",
    "title": "Midterm Help",
    "section": "",
    "text": "for(i in 1:100) {\n  if(i %% 3 == 0 & i %% 5 == 0) {\n    print(\"FizzBuzz\")\n  } else if(i %% 3 == 0) {\n    print(\"Fizz\")\n  } else if(i %% 5 == 0) {\n    print(\"Buzz\")\n  } else {\n    print(i)\n  }\n}\n\n[1] 1\n[1] 2\n[1] \"Fizz\"\n[1] 4\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 7\n[1] 8\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 11\n[1] \"Fizz\"\n[1] 13\n[1] 14\n[1] \"FizzBuzz\"\n[1] 16\n[1] 17\n[1] \"Fizz\"\n[1] 19\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 22\n[1] 23\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 26\n[1] \"Fizz\"\n[1] 28\n[1] 29\n[1] \"FizzBuzz\"\n[1] 31\n[1] 32\n[1] \"Fizz\"\n[1] 34\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 37\n[1] 38\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 41\n[1] \"Fizz\"\n[1] 43\n[1] 44\n[1] \"FizzBuzz\"\n[1] 46\n[1] 47\n[1] \"Fizz\"\n[1] 49\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 52\n[1] 53\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 56\n[1] \"Fizz\"\n[1] 58\n[1] 59\n[1] \"FizzBuzz\"\n[1] 61\n[1] 62\n[1] \"Fizz\"\n[1] 64\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 67\n[1] 68\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 71\n[1] \"Fizz\"\n[1] 73\n[1] 74\n[1] \"FizzBuzz\"\n[1] 76\n[1] 77\n[1] \"Fizz\"\n[1] 79\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 82\n[1] 83\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 86\n[1] \"Fizz\"\n[1] 88\n[1] 89\n[1] \"FizzBuzz\"\n[1] 91\n[1] 92\n[1] \"Fizz\"\n[1] 94\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 97\n[1] 98\n[1] \"Fizz\"\n[1] \"Buzz\""
  },
  {
    "objectID": "posts/tip_sheet/index.html",
    "href": "posts/tip_sheet/index.html",
    "title": "My tip sheet for week 2",
    "section": "",
    "text": "The assignment for week 2 is to make a “tip sheet” consisting of notes and reminders about how to use various aspects of the software in this course. This is an example of creating a post for this purpose.\nThe notes below are the ones that I demonstrated taking during our class. I expect that your tip sheet will have many more notes that are useful to you."
  },
  {
    "objectID": "posts/tip_sheet/index.html#notes-about-github",
    "href": "posts/tip_sheet/index.html#notes-about-github",
    "title": "My tip sheet for week 2",
    "section": "Notes about github",
    "text": "Notes about github\nHow to commit and push changes to github?\n\nMake some changes to your files\nRender your website in Rstudio\nCommit your changes in github desktop with a commit message\nPush to github.com\n\nYou can use Rstudio too…"
  },
  {
    "objectID": "posts/tip_sheet/index.html#restarting-r",
    "href": "posts/tip_sheet/index.html#restarting-r",
    "title": "My tip sheet for week 2",
    "section": "restarting R",
    "text": "restarting R\n\ntype .rs.restartR() in the console. THIS DID NOT WORK PROPERLY, the environment workspace did not clear using this method."
  },
  {
    "objectID": "posts/tip_sheet/index.html#changing-the-picture-for-a-post",
    "href": "posts/tip_sheet/index.html#changing-the-picture-for-a-post",
    "title": "My tip sheet for week 2",
    "section": "Changing the picture for a post",
    "text": "Changing the picture for a post\nQuarto blogs will display a picture in the listing of posts.\n\nPut a picture file (e.g., jpg, png, gif) inside the folder for the post.\nLink to the picture with image: parameter in the .qmd yaml at the top of the document.\n\nThe yaml for this document looks like:\n---\ntitle: \"My tip sheet for week 2\"\nauthor: \"Matt Crump\"\nimage: \"images/cover.jpg\"\n---\nThe following image is located in the images folder inside the folder for this post, and it should be displayed as the image in the post listing:\n ## more tips"
  },
  {
    "objectID": "posts/week3_qmd/index.html",
    "href": "posts/week3_qmd/index.html",
    "title": "Week 3 qmd skills",
    "section": "",
    "text": "Be able to make a new .qmd document\n\nYes, I can do this.\n\nuse the top-right green plus icon\nfrom the file menu\nfrom the file tab choose green plus icon."
  },
  {
    "objectID": "posts/week3_qmd/index.html#a-second-level",
    "href": "posts/week3_qmd/index.html#a-second-level",
    "title": "Week 3 qmd skills",
    "section": "3.1 a second level",
    "text": "3.1 a second level\n\nBe aware of resources to help you learn more about markdown options.\n\nitalics and bold\nsuperscript2 / subscript2\nTest10\nTest2302403\nstrikethrough\nasdf ads fdsaf das fas fsad fa sdfa ds\nverbatim code\nLet’s say I’m writing about the ggplot2 library.\nhttps://quarto.org\nQuarto\n\n\n\nThis is an elephant\n\n\n\nunordered list\n\nsub-item 1\nsub-item 2\n\nsub-sub-item 1\n\n\n\n\n\n\nRight\nLeft\nDefault\nCenter\n\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1\n\n\n\nPut our code in here\n1 + 1\na &lt;- 1\nb &lt;- 3\n# some comments\n\\(x=1\\)\n\\(E = mc^{2}\\)\n\n\nBe able to insert an R code chunk, and show the output in the rendered document.\n\n\nmacro for quick insert\n\n\n2+2\n\n[1] 4\n\n\nmac - “option-command-i” windows - Ctrl-Alt-I\n\nRunning R code chunks in a qmd\n\n\npressing play\ncopy/paste into console\nhighlight then command-enter (mac)\nprecedence issues (first to last)\n\n\nBe aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n\n\nhist(mtcars$mpg)\n\n\n\n\"b\" + 5 \n\nError in \"b\" + 5: non-numeric argument to binary operator\n\n\n\nlibrary(dplyr)\n\n\nhist(mtcars$mpg)\n\n\n\n\n\nBe able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\n\nYes! Use execute in top-level yml, chunk options have precedence over global options.\n\nWrite inline r code.\n\n2\n\na &lt;- 54\nb &lt;- 100\n\nc &lt;- a+b\n\nThe value of c is 154.\n\nExplain how the rendering environment is different from the Rstudio environment.\n\n\nc &lt;- a+b\nc\n\n[1] 154\n\n\n\nBe aware of more advanced quarto options for html documents, and try some of the options."
  },
  {
    "objectID": "posts/week5_dataimport/index.html",
    "href": "posts/week5_dataimport/index.html",
    "title": "Week 5 data import",
    "section": "",
    "text": "Load libraries\n\nlibrary(tidyverse)     # includes readr & tibble\nlibrary(rio)           # for almost any data import/export\nlibrary(haven)         # for SPSS, Stata,and SAS files\nlibrary(readxl)        # for Excel files\nlibrary(googlesheets4) # for Google Sheets\n\n\n\nOptions for viewing data\n\ndata(cars) # make data from R package available in global environment\n#View(cars) # view in editor pane\n#print(cars) # print to console\n#cars # print to console\n\n# show columns as rows\nglimpse(cars)\n\nRows: 50\nColumns: 2\n$ speed &lt;dbl&gt; 4, 4, 7, 7, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13…\n$ dist  &lt;dbl&gt; 2, 10, 4, 22, 16, 10, 18, 26, 34, 17, 28, 14, 20, 24, 28, 26, 34…\n\n#show first 10 lines of table\nhead(cars)\n\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n\n# print nicely to web\nknitr::kable(head(cars))\n\n\n\n\nspeed\ndist\n\n\n\n\n4\n2\n\n\n4\n10\n\n\n7\n4\n\n\n7\n22\n\n\n8\n16\n\n\n9\n10\n\n\n\n\n\n\n\nProduce summaries\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\n\nlibrary(summarytools)\n#view(dfSummary(starwars))\n\n\n\nImporting data\nData was downloaded from link in textbook.\n\nlibrary(rio)\n\ndemo_tsv &lt;- import(file = \"data/demo.tsv\")\n\nglimpse(demo_tsv)\n\nRows: 6\nColumns: 6\n$ character &lt;chr&gt; \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n$ factor    &lt;chr&gt; \"high\", \"low\", \"med\", \"high\", \"low\", \"med\"\n$ integer   &lt;int&gt; 1, 2, 3, 4, 5, 6\n$ double    &lt;dbl&gt; 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n$ logical   &lt;lgl&gt; TRUE, TRUE, FALSE, FALSE, NA, TRUE\n$ date      &lt;IDate&gt; 2022-04-04, 2022-04-03, 2022-04-02, 2022-04-01, 2022-03-31, …\n\ndemo_tsv$factor &lt;- as.factor(demo_tsv$factor)\n\nglimpse(demo_tsv)\n\nRows: 6\nColumns: 6\n$ character &lt;chr&gt; \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n$ factor    &lt;fct&gt; high, low, med, high, low, med\n$ integer   &lt;int&gt; 1, 2, 3, 4, 5, 6\n$ double    &lt;dbl&gt; 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n$ logical   &lt;lgl&gt; TRUE, TRUE, FALSE, FALSE, NA, TRUE\n$ date      &lt;IDate&gt; 2022-04-04, 2022-04-03, 2022-04-02, 2022-04-01, 2022-03-31, …\n\ndemo_tsv$\ndemo_tsv$factor\n\nNULL\n\n\n\ndemo_tsv  &lt;- import(\"data/demo.tsv\")  # tab-separated values\ndemo_csv  &lt;- import(\"data/demo.csv\")  # comma-separated values\ndemo_xls  &lt;- import(\"data/demo.xlsx\") # Excel format\ndemo_sav  &lt;- import(\"data/demo.sav\")  # SPSS format\n\n\ngs4_deauth() # skip authorisation for public data\n\ndemo_gs4  &lt;- googlesheets4::read_sheet(\n  ss = \"16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\"\n)\n\ngs4_get(ss = \"16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\")\n\nSpreadsheet name: demo\n              ID: 16dkq0YL0J7fyAwT1pdgj1bNNrheckAU_2-DKuuM6aGI\n          Locale: en_US\n       Time zone: Europe/London\n     # of sheets: 1\n\n(Sheet name): (Nominal extent in rows x columns)\n      Sheet1: 1000 x 26\n\n\n\ndemo &lt;- readr::read_csv(\"data/demo.csv\")\n\nspec(demo)\n\ncols(\n  character = col_character(),\n  factor = col_character(),\n  integer = col_double(),\n  double = col_double(),\n  logical = col_logical(),\n  date = col_date(format = \"\")\n)\n\ncorrected_cols &lt;- cols(\n  character = col_character(),\n  factor = col_factor(levels = c(\"low\", \"med\", \"high\")),\n  integer = col_integer(),\n  double = col_double(),\n  logical = col_logical(),\n  date = col_date(format = \"%Y-%m-%d\")\n)\n\ndemo &lt;- readr::read_csv(\"data/demo.csv\", col_types = corrected_cols)\n\nglimpse(demo)\n\nRows: 6\nColumns: 6\n$ character &lt;chr&gt; \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n$ factor    &lt;fct&gt; high, low, med, high, low, med\n$ integer   &lt;int&gt; 1, 2, 3, 4, 5, 6\n$ double    &lt;dbl&gt; 1.5, 2.5, 3.5, 4.5, 5.5, 6.5\n$ logical   &lt;lgl&gt; TRUE, TRUE, FALSE, FALSE, NA, TRUE\n$ date      &lt;date&gt; 2022-04-04, 2022-04-03, 2022-04-02, 2022-04-01, 2022-03-31, …\n\n\n\n\nWrite your own data\n\navatar &lt;- tibble(\n  name = c(\"Katara\", \"Toph\", \"Sokka\"),\n  bends = c(\"water\", \"earth\", NA),\n  friendly = TRUE,\n  numbers = c(1,2,3),\n  more_numbers = 1:3,\n  even_more = seq(1,3,1)\n)\n\n# print it\navatar\n\n# A tibble: 3 × 6\n  name   bends friendly numbers more_numbers even_more\n  &lt;chr&gt;  &lt;chr&gt; &lt;lgl&gt;      &lt;dbl&gt;        &lt;int&gt;     &lt;dbl&gt;\n1 Katara water TRUE           1            1         1\n2 Toph   earth TRUE           2            2         2\n3 Sokka  &lt;NA&gt;  TRUE           3            3         3\n\n\n\navatar_by_row &lt;- tribble(\n  ~name,    ~bends,  ~friendly, ~numbers,\n  \"Katara\", \"water\", TRUE, 1L,\n  \"Toph\",   \"earth\", TRUE, 2L,\n  \"Sokka\",  NA,      TRUE, 3L\n)\n\navatar_by_row\n\n# A tibble: 3 × 4\n  name   bends friendly numbers\n  &lt;chr&gt;  &lt;chr&gt; &lt;lgl&gt;      &lt;int&gt;\n1 Katara water TRUE           1\n2 Toph   earth TRUE           2\n3 Sokka  &lt;NA&gt;  TRUE           3\n\n\n\n\nExport data\n\nexport(avatar, \"avatar.csv\")"
  },
  {
    "objectID": "posts/week5a_loops/loops_logic.html",
    "href": "posts/week5a_loops/loops_logic.html",
    "title": "Logic, loops, and functions",
    "section": "",
    "text": "Logic statements are used to compare two things, or two sets of things. The output of comparison is a TRUE or FALSE statment. If many things are being compared at once, the output could be many TRUE or FALSE statements for each comparison\n\n\n\n1 == 1 # is 1 equal to 1?\n\n[1] TRUE\n\n1 == 2 # is 1 equal to 2?\n\n[1] FALSE\n\nc(1, 2, 3) == c(2, 1, 3) # compares each element with each element\n\n[1] FALSE FALSE  TRUE\n\n1 == c(2, 1, 3)\n\n[1] FALSE  TRUE FALSE\n\n\n\n\n\n\n1 != 1 # is 1 not equal to 1?\n\n[1] FALSE\n\n1 != 2 # is 1 not equal to 2?\n\n[1] TRUE\n\nc(1, 2, 3) != c(2, 1, 3) # compares each element with each element\n\n[1]  TRUE  TRUE FALSE\n\n1 != c(2, 1, 3)\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n\n\n1 &gt; 1 # is 1 greater than 1?\n\n[1] FALSE\n\n5 &gt; 1 # is 5 greater than 1?\n\n[1] TRUE\n\n3 &lt; 2 # is 3 less than 2?\n\n[1] FALSE\n\n3 &lt; 1 # is 3 less than 1?\n\n[1] FALSE\n\nc(1, 2, 3) &gt; c(2, 1, 3) # ask the question element by element\n\n[1] FALSE  TRUE FALSE\n\nc(1, 2, 3) &lt; c(2, 1, 3)\n\n[1]  TRUE FALSE FALSE\n\n2 &gt; c(1, 2, 3) # is greater than each of the numbers\n\n[1]  TRUE FALSE FALSE\n\n\n\n\n\nIs something greater than or equal to something else\n\n1 &gt;= 1 # is 1 greater than or equal to 1?\n\n[1] TRUE\n\n5 &gt;= 1 # is 5 greater than or equal to 1?\n\n[1] TRUE\n\n3 &lt;= 2 # is 3 less than 2?\n\n[1] FALSE\n\n3 &lt;= 1 # is 3 less than 1?\n\n[1] FALSE\n\nc(1, 2, 3) &gt;= c(2, 1, 3) # ask the question element by element\n\n[1] FALSE  TRUE  TRUE\n\nc(1, 2, 3) &lt;= c(2, 1, 3)\n\n[1]  TRUE FALSE  TRUE\n\n2 &gt;= c(1, 2, 3) # is greater than each of the numbers\n\n[1]  TRUE  TRUE FALSE\n\n\n\n\n\nThe ampersand & is used for AND, which allows use to evaluate whether two or more properties are all TRUE.\n\n# is 16 divisible by 4 AND 8\n16 %% 4 == 0 & 16 %% 8 == 0\n\n[1] TRUE\n\n# is 16 divisible by 4 AND 3\n16 %% 4 == 0 & 16 %% 3 == 0\n\n[1] FALSE\n\n# is 16 divisible by 8 and 4 and 2\n16 %% 4 == 0 & 16 %% 8 == 0 & 16 %% 2 == 0\n\n[1] TRUE\n\n16 %% 4 == 0\n\n[1] TRUE\n\n16 %% 8 == 0\n\n[1] TRUE\n\n16 %% 2 == 0\n\n[1] TRUE\n\n\n\n\n\nThe | is used for OR, which allows use to evaluate at least one of the properties is TRUE.\n\n# is 16 divisible by 4 OR 8\n16 %% 4 == 0 | 16 %% 8 == 0\n\n[1] TRUE\n\n# is 16 divisible by 4 OR 3\n# it is divisible by 4, so the answer is TRUE\n# because at least one of the comparisons is TRUE\n16 %% 4 == 0 | 16 %% 3 == 0\n\n[1] TRUE\n\nTRUE | FALSE\n\n[1] TRUE\n\n\n\n\n\nWhen R returns values as TRUE or FALSE, it return a logical variable. It also treats TRUE as a 1, and FALSE as a 0. In the example below we see it is possible sum up a logical variable with multiple TRUE and FALSE entries.\n\nc(1, 2, 3) == c(1, 2, 3)\n\n[1] TRUE TRUE TRUE\n\nsum(c(1, 2, 3) == c(1, 2, 3))\n\n[1] 3\n\nc(1, 2, 3) == c(2, 1, 3)\n\n[1] FALSE FALSE  TRUE\n\nsum(c(1, 2, 3) == c(2, 1, 3))\n\n[1] 1"
  },
  {
    "objectID": "posts/week5a_loops/loops_logic.html#logic",
    "href": "posts/week5a_loops/loops_logic.html#logic",
    "title": "Logic, loops, and functions",
    "section": "",
    "text": "Logic statements are used to compare two things, or two sets of things. The output of comparison is a TRUE or FALSE statment. If many things are being compared at once, the output could be many TRUE or FALSE statements for each comparison\n\n\n\n1 == 1 # is 1 equal to 1?\n\n[1] TRUE\n\n1 == 2 # is 1 equal to 2?\n\n[1] FALSE\n\nc(1, 2, 3) == c(2, 1, 3) # compares each element with each element\n\n[1] FALSE FALSE  TRUE\n\n1 == c(2, 1, 3)\n\n[1] FALSE  TRUE FALSE\n\n\n\n\n\n\n1 != 1 # is 1 not equal to 1?\n\n[1] FALSE\n\n1 != 2 # is 1 not equal to 2?\n\n[1] TRUE\n\nc(1, 2, 3) != c(2, 1, 3) # compares each element with each element\n\n[1]  TRUE  TRUE FALSE\n\n1 != c(2, 1, 3)\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n\n\n1 &gt; 1 # is 1 greater than 1?\n\n[1] FALSE\n\n5 &gt; 1 # is 5 greater than 1?\n\n[1] TRUE\n\n3 &lt; 2 # is 3 less than 2?\n\n[1] FALSE\n\n3 &lt; 1 # is 3 less than 1?\n\n[1] FALSE\n\nc(1, 2, 3) &gt; c(2, 1, 3) # ask the question element by element\n\n[1] FALSE  TRUE FALSE\n\nc(1, 2, 3) &lt; c(2, 1, 3)\n\n[1]  TRUE FALSE FALSE\n\n2 &gt; c(1, 2, 3) # is greater than each of the numbers\n\n[1]  TRUE FALSE FALSE\n\n\n\n\n\nIs something greater than or equal to something else\n\n1 &gt;= 1 # is 1 greater than or equal to 1?\n\n[1] TRUE\n\n5 &gt;= 1 # is 5 greater than or equal to 1?\n\n[1] TRUE\n\n3 &lt;= 2 # is 3 less than 2?\n\n[1] FALSE\n\n3 &lt;= 1 # is 3 less than 1?\n\n[1] FALSE\n\nc(1, 2, 3) &gt;= c(2, 1, 3) # ask the question element by element\n\n[1] FALSE  TRUE  TRUE\n\nc(1, 2, 3) &lt;= c(2, 1, 3)\n\n[1]  TRUE FALSE  TRUE\n\n2 &gt;= c(1, 2, 3) # is greater than each of the numbers\n\n[1]  TRUE  TRUE FALSE\n\n\n\n\n\nThe ampersand & is used for AND, which allows use to evaluate whether two or more properties are all TRUE.\n\n# is 16 divisible by 4 AND 8\n16 %% 4 == 0 & 16 %% 8 == 0\n\n[1] TRUE\n\n# is 16 divisible by 4 AND 3\n16 %% 4 == 0 & 16 %% 3 == 0\n\n[1] FALSE\n\n# is 16 divisible by 8 and 4 and 2\n16 %% 4 == 0 & 16 %% 8 == 0 & 16 %% 2 == 0\n\n[1] TRUE\n\n16 %% 4 == 0\n\n[1] TRUE\n\n16 %% 8 == 0\n\n[1] TRUE\n\n16 %% 2 == 0\n\n[1] TRUE\n\n\n\n\n\nThe | is used for OR, which allows use to evaluate at least one of the properties is TRUE.\n\n# is 16 divisible by 4 OR 8\n16 %% 4 == 0 | 16 %% 8 == 0\n\n[1] TRUE\n\n# is 16 divisible by 4 OR 3\n# it is divisible by 4, so the answer is TRUE\n# because at least one of the comparisons is TRUE\n16 %% 4 == 0 | 16 %% 3 == 0\n\n[1] TRUE\n\nTRUE | FALSE\n\n[1] TRUE\n\n\n\n\n\nWhen R returns values as TRUE or FALSE, it return a logical variable. It also treats TRUE as a 1, and FALSE as a 0. In the example below we see it is possible sum up a logical variable with multiple TRUE and FALSE entries.\n\nc(1, 2, 3) == c(1, 2, 3)\n\n[1] TRUE TRUE TRUE\n\nsum(c(1, 2, 3) == c(1, 2, 3))\n\n[1] 3\n\nc(1, 2, 3) == c(2, 1, 3)\n\n[1] FALSE FALSE  TRUE\n\nsum(c(1, 2, 3) == c(2, 1, 3))\n\n[1] 1"
  },
  {
    "objectID": "posts/week5a_loops/loops_logic.html#if-else",
    "href": "posts/week5a_loops/loops_logic.html#if-else",
    "title": "Logic, loops, and functions",
    "section": "IF ELSE",
    "text": "IF ELSE\nA roller-coaster operator checks if people are taller than a line to see if they can ride the coaster. This is an IF ELSE control structure. IF the person is taller than the line, then they can go on the ride; ELSE (otherwise) the person can not go on the ride.\nIn other words, IF the situation is X, then do something; ELSE (if the situation is not X), then do something different.\nIF and ELSE statements let us specify the conditions when specific actions are taken. Generally, IF and ELSE statements are used inside loops (for, or while, or repeat loops), because at each step or iteration of the loop, we want to check something, and then do something.\nConsider this:\n\na &lt;- 1 # define a to be a 1\n\nif (a == 1) {\n  print(a) # this is what happens if a==1\n} else {\n  print(\"A is not 1\") # this is what happens if a is not 1\n}\n\n[1] 1\n\n\n\na &lt;- 2 # define a to be a 1\nif (a == 1) {\n  print(a) # this is what happens if a==1\n} else {\n  print(rbinom(10,1,.5)) # this is what happens if a is not 1\n  1+1\n  print(\"hello world\")\n  rbinom(10,1,.5)\n}\n\n [1] 0 0 1 1 0 1 0 1 0 0\n[1] \"hello world\"\n\n\n [1] 1 0 1 1 1 0 1 0 1 0\n\n\n\na &lt;- 3.5\n\nif(a &gt;= 4){\n  print(\"get to go on the cyclone\")\n}\n\nif(a &lt; 4){\n  print(\"sorry\")\n}\n\n[1] \"sorry\"\n\n\nNormally we find IF and ELSE in a loop like this:\n\na &lt;- c(1, 0, 1, 0, 0, 0, 1) # make a variable contain 1s and 0s\n# write a loop to check each element in the variable\n# and do different things depending on the element\n\nfor (i in a) {\n  \n  if (i == 1) {\n    print(\"I'm a 1\") # what to do when i is 1\n  } else {\n    print(\"I'm not a 1\") # what to do when i is not 1\n  }\n  \n}\n\n[1] \"I'm a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm a 1\"\n\n\nWe can have multiple conditions in our if statements. See the next section on loops for more info about using loops.\n\na &lt;- c(1, 2, 3, 1, 2, 0, 1) # make a variable contain 1s and 0s\n# write a loop to check each element in the variable\n# and do different things depending on the element\nfor (i in a) {\n  if (i == 1) {\n    print(\"I'm a 1\") # what to do when i is 1\n  } else if (i == 2) {\n    print(\"I'm a 2\") # what to do when i is 2\n  } else if (i == 3) {\n    print(\"I'm a 3\") # what to do when i is 3\n  } else {\n    print(\"I'm not any of the above\") #what to do when none are true\n  }\n}\n\n[1] \"I'm a 1\"\n[1] \"I'm a 2\"\n[1] \"I'm a 3\"\n[1] \"I'm a 1\"\n[1] \"I'm a 2\"\n[1] \"I'm not any of the above\"\n[1] \"I'm a 1\""
  },
  {
    "objectID": "posts/week5a_loops/loops_logic.html#loops",
    "href": "posts/week5a_loops/loops_logic.html#loops",
    "title": "Logic, loops, and functions",
    "section": "Loops",
    "text": "Loops\nCheck R help for on Control Flow ?Control.\nfor(){} for(loop control){do something each iteration}\n\nfor(iterator in vector) {\n  #do something\n}\n\nLoop control is defined in between the parentheses. The name of the iterator is placed on the left of in(can be assigned any name you want, does not need to be declared in advance). During the execution of the loop, the iterator takes on the values inside the vector which is placed on the right side of in. Specifically, the following is happening.\nLoop steps: 1. iterator &lt;- vector[1] 2. iterator &lt;- vector[2] 3. iterator &lt;- vector[3] 4. etc.\nThe loop will automatically stop once it reaches the last item in the vector. The loop can be stopped before that using the break command.\n\n# Make a loop do something 5 times\n# i is the iterator\n# 1:5 creates a vector with 5 numbers in it, 1, 2, 3, 4, 5\n# the loop will run 5 times, because there are five things to assign to i\nfor(i in 1:5) {\n  print(\"hello\")\n}\n\n[1] \"hello\"\n[1] \"hello\"\n[1] \"hello\"\n[1] \"hello\"\n[1] \"hello\"\n\n\n\n# show the value of i each step of the loop\nfor(i in 1:5) {\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n# define the vector to loop over in advance\nx &lt;- 1:5\nfor (i in x) {\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n# Reminder that i becomes the next value in the vector\n# your vector can have any order \nmy_sequence &lt;- c(1, 5, 2, 3, 4)\nfor (i in my_sequence) {\n  print(i)\n}\n\n[1] 1\n[1] 5\n[1] 2\n[1] 3\n[1] 4\n\n\n\n# index vector does not need to be numbers\nmy_things &lt;- c(\"A\", \"B\", \"C\", \"D\")\nfor (i in my_things) {\n  print(i)\n}\n\n[1] \"A\"\n[1] \"B\"\n[1] \"C\"\n[1] \"D\"\n\n\n\nBreaking a loop\nbreak stops a loop. Used with logical statements to define the conditions necessary to cause the break.\n\nfor(i in 1:10) {\n  if (i &lt; 5) {\n    print(i)\n  } else{\n    break\n  }\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n\n\n\n\nWhile loops\nWhile loops run until a logical condition is met. Here there is no iterator, just a logic statement that needs to be met.\nThis one prints i while i is less than 6. As soon as i becomes “not less than 6”, then the loop stops. Critically, inside the loop, the value of i increases each iteration.\n\ni &lt;- 1 # create an variable\nwhile (i &lt; 6) {\n  print(i)\n  i &lt;- i + 1 #add one eachs step of the loop\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n\nRepeat loops\nSimilar to while, but let’s do things until a condition is met.\n\ni &lt;- 0\nrepeat {\n  i &lt;- i + 1\n  print(i)\n  if (i == 5) {\n    break\n  }\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\ni &lt;- 0\nrepeat {\n    i &lt;- i + 1\n    \n    if (i == 5) {\n      break\n    }\n    \n    print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n\n\n\n\nExamples\nBraces are not needed on one line\n\nfor(i in 1:5) print(i)\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\nUsing the value of the iterator to assign in values systematically to another variable.\n\n# put 1 into the first five positions of x\nx &lt;- c() # create empty vector\nfor (i in 1:5) {\n  x[i] &lt;- 1  # assign 1 to the ith slot in x\n}\nx\n\n[1] 1 1 1 1 1\n\n\n\n# put the numbers 1-5 in the first 5 positions of x\nx &lt;- c()\nfor (i in 1:5) {\n  x[i] &lt;- i\n}\nx\n\n[1] 1 2 3 4 5\n\n\nMake your own counter, when you need one\n\na &lt;- c(1, 4, 3, 5, 7, 6, 8, 2)\nodd &lt;- c()\ncounter &lt;- 0\nfor (i in a) {\n  # i will the values of a in each position\n  counter &lt;- counter + 1\n  if (i %% 2 != 0) {\n    odd[counter] &lt;- \"odd\"\n  } else {\n    odd[counter] &lt;- \"even\"\n  }\n}\nodd\n\n[1] \"odd\"  \"even\" \"odd\"  \"odd\"  \"odd\"  \"even\" \"even\" \"even\"\n\n# An alternative strategy\na &lt;- c(1, 4, 3, 5, 7, 6, 8, 2)\nodd &lt;- c()\n# 1:length(a) creates a sequence from 1 to length\nfor (i in 1:length(a)) {\n  if (a[i] %% 2 != 0) {\n    odd[i] &lt;- \"odd\"\n  } else {\n    odd[i] &lt;- \"even\"\n  }\n}\nodd\n\n[1] \"odd\"  \"even\" \"odd\"  \"odd\"  \"odd\"  \"even\" \"even\" \"even\"\n\n\nNesting loops\n\nfor(i in 1:5) {\n  for (j in 1:5) {\n    print(c(i, j))\n  }\n}\n\n[1] 1 1\n[1] 1 2\n[1] 1 3\n[1] 1 4\n[1] 1 5\n[1] 2 1\n[1] 2 2\n[1] 2 3\n[1] 2 4\n[1] 2 5\n[1] 3 1\n[1] 3 2\n[1] 3 3\n[1] 3 4\n[1] 3 5\n[1] 4 1\n[1] 4 2\n[1] 4 3\n[1] 4 4\n[1] 4 5\n[1] 5 1\n[1] 5 2\n[1] 5 3\n[1] 5 4\n[1] 5 5\n\n# example of using nested loops to fill the contents\n# of a matrix\nmy_matrix &lt;- matrix(0, ncol = 5, nrow = 5)\nfor (i in 1:5) {\n  for (j in 1:5) {\n    my_matrix[i, j] &lt;- i * j\n  }\n}\nmy_matrix\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    2    4    6    8   10\n[3,]    3    6    9   12   15\n[4,]    4    8   12   16   20\n[5,]    5   10   15   20   25\n\n\nbreak exits out of the immediate loop\n\n# the inside loop stops when i+j is greater than 5\n# the outside loop keeps going\nsum_of_i_j &lt;- c()\ncounter &lt;- 0\nfor (i in 1:5) {\n  for (j in 1:5) {\n    counter &lt;- counter + 1\n    sum_of_i_j[counter] &lt;- i + j\n    if (i + j &gt; 5) {\n      break\n    }\n  }\n}\nsum_of_i_j\n\n [1] 2 3 4 5 6 3 4 5 6 4 5 6 5 6 6"
  },
  {
    "objectID": "posts/week6_summary/index.html",
    "href": "posts/week6_summary/index.html",
    "title": "Week 6 Data Summary",
    "section": "",
    "text": "Download the ncod_tweets.rds file from the link in the textbook. Put the file in the directory for your post. Then load it.\n\ntweets &lt;- readRDS(\"ncod_tweets.rds\")"
  },
  {
    "objectID": "posts/week6_summary/index.html#set-up",
    "href": "posts/week6_summary/index.html#set-up",
    "title": "Week 6 Data Summary",
    "section": "",
    "text": "Download the ncod_tweets.rds file from the link in the textbook. Put the file in the directory for your post. Then load it.\n\ntweets &lt;- readRDS(\"ncod_tweets.rds\")"
  },
  {
    "objectID": "posts/week6_summary/index.html#summarise",
    "href": "posts/week6_summary/index.html#summarise",
    "title": "Week 6 Data Summary",
    "section": "5.2 Summarise",
    "text": "5.2 Summarise\nThis is a function from the dplyr package.\n\nlibrary(tidyverse) #loads dplyr as well\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nfavourite_summary &lt;- summarise(tweets, # name of the data table\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count))\n\nknitr::kable(favourite_summary) #print output\n\n\n\n\nmean_favs\nmedian_favs\nmin_favs\nmax_favs\n\n\n\n\n29.71732\n3\n0\n22935\n\n\n\n\n\nWe can add as many new functions as we want. Each one will apply a function of choice to the named column.\nFor example, if wanted the standard deviation of the values in the column named favorite_count, then we added sd_favs = sd(favorite_count).\n\nfavourite_summary &lt;- summarise(tweets,\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count),\n                           sd_favs = sd(favorite_count),\n                           mean_RTs = mean(retweet_count),\n                           median_RTs = median(retweet_count),\n                           min_RTs = min(retweet_count),\n                           max_RTs = max(retweet_count),\n                           sd_RTs = sd(favorite_count))\n\nknitr::kable(favourite_summary)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmean_favs\nmedian_favs\nmin_favs\nmax_favs\nsd_favs\nmean_RTs\nmedian_RTs\nmin_RTs\nmax_RTs\nsd_RTs\n\n\n\n\n29.71732\n3\n0\n22935\n329.9982\n3.166632\n0\n0\n2525\n329.9982\n\n\n\n\n\nExample of plotting a histogram of the favorite counts, in log scale.\n\nggplot(tweets, aes(x = favorite_count)) +\n  geom_histogram(bins = 25) +\n  scale_x_continuous(trans = \"pseudo_log\", \n                     breaks = c(0, 1, 10, 100, 1000, 10000))\n\n\n\n\nAnother example of adding individual functions to summarise.\n\ntweet_summary &lt;- tweets %&gt;%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(), # count all rows\n            min_date = min(created_at), # find the minimum date\n            max_date = max(created_at)) # find the maximum date\n\nglimpse(tweet_summary)\n\nRows: 1\nColumns: 5\n$ mean_favs   &lt;dbl&gt; 29.71732\n$ median_favs &lt;dbl&gt; 3\n$ n           &lt;int&gt; 28626\n$ min_date    &lt;dttm&gt; 2021-10-10 00:10:02\n$ max_date    &lt;dttm&gt; 2021-10-12 20:12:27\n\n\nExample of writing inline code.\n\ndate_from &lt;- tweet_summary$min_date %&gt;% \n  format(\"%d %B, %Y\")\ndate_to &lt;- tweet_summary$max_date %&gt;% \n  format(\"%d %B, %Y\")\n\nThere were 28626 tweets between 10 October, 2021 and 12 October, 2021."
  },
  {
    "objectID": "posts/week6_summary/index.html#pipes",
    "href": "posts/week6_summary/index.html#pipes",
    "title": "Week 6 Data Summary",
    "section": "5.3.2 Pipes",
    "text": "5.3.2 Pipes\nExample of using the pipe operate syntax %&gt;%.\n\ntweets_per_user &lt;- tweets %&gt;%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)\n\n# A tibble: 6 × 2\n  screen_name         n\n  &lt;chr&gt;           &lt;int&gt;\n1 interest_outfit    35\n2 LeoShir2           33\n3 NRArchway          32\n4 dr_stack           32\n5 bhavna_95          25\n6 WipeHomophobia     23"
  },
  {
    "objectID": "posts/week6_summary/index.html#counting",
    "href": "posts/week6_summary/index.html#counting",
    "title": "Week 6 Data Summary",
    "section": "5.4 Counting",
    "text": "5.4 Counting\nThe count function counts the number of times each unique item occurs in a column. This is an example appplied to the screen_name column, which contains twitter usernames.\n\ntweets_per_user &lt;- tweets %&gt;%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)\n\n# A tibble: 6 × 2\n  screen_name         n\n  &lt;chr&gt;           &lt;int&gt;\n1 interest_outfit    35\n2 LeoShir2           33\n3 NRArchway          32\n4 dr_stack           32\n5 bhavna_95          25\n6 WipeHomophobia     23"
  },
  {
    "objectID": "posts/week6_summary/index.html#grouping",
    "href": "posts/week6_summary/index.html#grouping",
    "title": "Week 6 Data Summary",
    "section": "5.5 Grouping",
    "text": "5.5 Grouping\nTwo ways to use the group_by function. Here we produce summaries for each level in the verified column.\n\ntweets_grouped &lt;- tweets %&gt;%\n  group_by(verified)\n\nverified &lt;- tweets_grouped %&gt;%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %&gt;%\n  ungroup()\n\nknitr::kable(verified)\n\n\n\n\nverified\ncount\nmean_favs\nmean_retweets\n\n\n\n\nFALSE\n26676\n18.40576\n1.825649\n\n\nTRUE\n1950\n184.45949\n21.511282\n\n\n\n\n\n\nverified &lt;- tweets %&gt;%\n  group_by(verified) %&gt;%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %&gt;%\n  ungroup()\n\nknitr::kable(verified)\n\n\n\n\nverified\ncount\nmean_favs\nmean_retweets\n\n\n\n\nFALSE\n26676\n18.40576\n1.825649\n\n\nTRUE\n1950\n184.45949\n21.511282"
  },
  {
    "objectID": "posts/week6_summary/index.html#open-data-from-nyc",
    "href": "posts/week6_summary/index.html#open-data-from-nyc",
    "title": "Week 6 Data Summary",
    "section": "Open data from NYC",
    "text": "Open data from NYC\nSquirrel census\nhttps://data.cityofnewyork.us/Environment/2018-Central-Park-Squirrel-Census-Squirrel-Data/vfnx-vebw\n\nsquirrel &lt;- rio::import(\"2018_Central_Park_Squirrel_Census_-_Squirrel_Data.csv\")\n\n# counts of squirrels by the primary fur color\n\nsquirrel %&gt;%\n  count(`Primary Fur Color`) %&gt;%\n  ggplot(aes(x = `Primary Fur Color`, y = n)) +\n  geom_bar(stat = \"identity\")\n\n\n\n\nSAT results\n\nsat &lt;- rio::import(\"2012_SAT_Results.csv\")\n\nsat &lt;- sat %&gt;%\n  mutate(`SAT Critical Reading Avg. Score` = as.numeric(`SAT Critical Reading Avg. Score`),\n         `SAT Math Avg. Score` = as.numeric(`SAT Math Avg. Score`),\n         `SAT Writing Avg. Score` = as.numeric(`SAT Critical Reading Avg. Score`)\n         ) %&gt;%\n  filter(!is.na(`SAT Critical Reading Avg. Score`),\n         !is.na(`SAT Math Avg. Score`),\n         !is.na(`SAT Writing Avg. Score`))\n\nWarning: There were 2 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `SAT Critical Reading Avg. Score = as.numeric(`SAT Critical\n  Reading Avg. Score`)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.\n\nggplot(sat, aes(x=`SAT Critical Reading Avg. Score`, y = `SAT Writing Avg. Score`)) +\n  geom_point()\n\n\n\nggplot(sat, aes(x=`SAT Critical Reading Avg. Score`, y = `SAT Math Avg. Score`)) +\n  geom_point()"
  },
  {
    "objectID": "posts/week7_more_ggplot/index.html",
    "href": "posts/week7_more_ggplot/index.html",
    "title": "week 7: more ggplot",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ngrades &lt;- c(2.5, 8, 4)\nstudents &lt;- c(\"A\",\"B\",\"C\")\nstudent_performance &lt;- tibble(students,grades)\n\n# alternate syntax\n\nstudent_performance &lt;- tibble(\n  grades = c(2.5, 8, 4),\n  students = c(\"A\",\"B\",\"C\")\n)\n\n# ggplot bar graph\nggplot(student_performance, aes(x = students, y = grades))+\n  geom_bar(stat = \"identity\", fill = \"white\", color = \"blue\") +\n  scale_y_continuous(breaks = 0:10,limits = c(0,10)) +\n  theme_classic() +\n  geom_text(label=grades, position = position_dodge(width=.9), vjust=-0.4)+\n  xlab(\"Students\")+\n  ylab(\"Grades\") +\n  ggtitle(\"Student Performance\") +\n  theme_classic(base_size = 12) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n#Create a dataframe\nfactor_one &lt;- rep(as.factor(c(\"A\", \"B\", \"C\")), 2)\nfactor_two &lt;- rep(as.factor(c(\"IIA\", \"IIB\")), 3)\ndv_means &lt;- c(20, 30, 40, 20, 40, 40)\ndv_SEs   &lt;- c(4, 3.4, 4, 3, 2, 4)\nplot_df &lt;- data.frame(factor_one,\n                      factor_two,\n                      dv_means,\n                      dv_SEs)\n\n# basic bar graph\n\nggplot(plot_df,\n       aes(\n         x = factor_one,\n         y = dv_means,\n         group = factor_two,\n         fill = factor_two\n       )) +\n  geom_bar(stat = \"identity\", position = \"dodge\")"
  },
  {
    "objectID": "posts/week8_relations/index.html",
    "href": "posts/week8_relations/index.html",
    "title": "Week 8: data relations",
    "section": "",
    "text": "customers &lt;- tibble(\n  id = 1:5,\n  city = c(\"Port Ellen\", \"Dufftown\", NA, \"Aberlour\", \"Tobermory\"),\n  postcode = c(\"PA42 7DU\", \"AB55 4DH\", NA, \"AB38 7RY\", \"PA75 6NR\")\n)\n\norders &lt;- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)"
  },
  {
    "objectID": "posts/week8_relations/index.html#what-doers-dplyr-mutate-do",
    "href": "posts/week8_relations/index.html#what-doers-dplyr-mutate-do",
    "title": "Week 8: data relations",
    "section": "what doers dplyr mutate do?",
    "text": "what doers dplyr mutate do?\n\norders_B &lt;- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)\n\n# add a new column\norders_B %&gt;%\n  mutate(satisfaction = NA)\n\n# A tibble: 9 × 3\n     id items satisfaction\n  &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt;       \n1     2    10 NA          \n2     3    18 NA          \n3     4    21 NA          \n4     4    23 NA          \n5     5     9 NA          \n6     5    11 NA          \n7     6    11 NA          \n8     6    12 NA          \n9     7     3 NA          \n\n# add mutiplie new column\norders_B %&gt;%\n  mutate(satisfaction = NA,\n         numbers = 1:9)\n\n# A tibble: 9 × 4\n     id items satisfaction numbers\n  &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt;          &lt;int&gt;\n1     2    10 NA                 1\n2     3    18 NA                 2\n3     4    21 NA                 3\n4     4    23 NA                 4\n5     5     9 NA                 5\n6     5    11 NA                 6\n7     6    11 NA                 7\n8     6    12 NA                 8\n9     7     3 NA                 9\n\n# assign back to tibble\norders_B &lt;- orders_B %&gt;%\n              mutate(satisfaction = NA,\n                     numbers = 1:9)\n\n\norders_B %&gt;%\n  mutate(numbers_as_strings = as.character(numbers))\n\n# A tibble: 9 × 5\n     id items satisfaction numbers numbers_as_strings\n  &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt;          &lt;int&gt; &lt;chr&gt;             \n1     2    10 NA                 1 1                 \n2     3    18 NA                 2 2                 \n3     4    21 NA                 3 3                 \n4     4    23 NA                 4 4                 \n5     5     9 NA                 5 5                 \n6     5    11 NA                 6 6                 \n7     6    11 NA                 7 7                 \n8     6    12 NA                 8 8                 \n9     7     3 NA                 9 9                 \n\norders_B %&gt;%\n  mutate(items_minus_id = items - id)\n\n# A tibble: 9 × 5\n     id items satisfaction numbers items_minus_id\n  &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt;          &lt;int&gt;          &lt;dbl&gt;\n1     2    10 NA                 1              8\n2     3    18 NA                 2             15\n3     4    21 NA                 3             17\n4     4    23 NA                 4             19\n5     5     9 NA                 5              4\n6     5    11 NA                 6              6\n7     6    11 NA                 7              5\n8     6    12 NA                 8              6\n9     7     3 NA                 9             -4"
  },
  {
    "objectID": "posts/week8_relations/index.html#dplyr-filter",
    "href": "posts/week8_relations/index.html#dplyr-filter",
    "title": "Week 8: data relations",
    "section": "Dplyr filter",
    "text": "Dplyr filter\n\nfull_data &lt;- full_join(customers, orders, by = \"id\")\n\nWarning in full_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n\nfull_data\n\n# A tibble: 10 × 4\n      id city       postcode items\n   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;\n 1     1 Port Ellen PA42 7DU    NA\n 2     2 Dufftown   AB55 4DH    10\n 3     3 &lt;NA&gt;       &lt;NA&gt;        18\n 4     4 Aberlour   AB38 7RY    21\n 5     4 Aberlour   AB38 7RY    23\n 6     5 Tobermory  PA75 6NR     9\n 7     5 Tobermory  PA75 6NR    11\n 8     6 &lt;NA&gt;       &lt;NA&gt;        11\n 9     6 &lt;NA&gt;       &lt;NA&gt;        12\n10     7 &lt;NA&gt;       &lt;NA&gt;         3\n\nfull_data %&gt;%\n  filter(items &gt; 10)\n\n# A tibble: 6 × 4\n     id city      postcode items\n  &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;dbl&gt;\n1     3 &lt;NA&gt;      &lt;NA&gt;        18\n2     4 Aberlour  AB38 7RY    21\n3     4 Aberlour  AB38 7RY    23\n4     5 Tobermory PA75 6NR    11\n5     6 &lt;NA&gt;      &lt;NA&gt;        11\n6     6 &lt;NA&gt;      &lt;NA&gt;        12\n\nfull_data %&gt;%\n  filter(postcode == \"AB38 7RY\")\n\n# A tibble: 2 × 4\n     id city     postcode items\n  &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;    &lt;dbl&gt;\n1     4 Aberlour AB38 7RY    21\n2     4 Aberlour AB38 7RY    23\n\nfull_data %&gt;%\n  filter(postcode == \"AB38 7RY\" & items &gt; 21)\n\n# A tibble: 1 × 4\n     id city     postcode items\n  &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;    &lt;dbl&gt;\n1     4 Aberlour AB38 7RY    23\n\nfull_data %&gt;%\n  filter(postcode == \"AB38 7RY\",\n         items &gt; 21)\n\n# A tibble: 1 × 4\n     id city     postcode items\n  &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;    &lt;dbl&gt;\n1     4 Aberlour AB38 7RY    23\n\nfull_data %&gt;%\n  filter(city != \"Aberlour\")\n\n# A tibble: 4 × 4\n     id city       postcode items\n  &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;\n1     1 Port Ellen PA42 7DU    NA\n2     2 Dufftown   AB55 4DH    10\n3     5 Tobermory  PA75 6NR     9\n4     5 Tobermory  PA75 6NR    11\n\nfull_data %&gt;%\n  filter( is.na(city) == FALSE,\n          is.na(items) == FALSE)\n\n# A tibble: 5 × 4\n     id city      postcode items\n  &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;dbl&gt;\n1     2 Dufftown  AB55 4DH    10\n2     4 Aberlour  AB38 7RY    21\n3     4 Aberlour  AB38 7RY    23\n4     5 Tobermory PA75 6NR     9\n5     5 Tobermory PA75 6NR    11\n\nfull_data %&gt;%\n  filter( is.na(city) == TRUE | is.na(items) == TRUE)\n\n# A tibble: 5 × 4\n     id city       postcode items\n  &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;\n1     1 Port Ellen PA42 7DU    NA\n2     3 &lt;NA&gt;       &lt;NA&gt;        18\n3     6 &lt;NA&gt;       &lt;NA&gt;        11\n4     6 &lt;NA&gt;       &lt;NA&gt;        12\n5     7 &lt;NA&gt;       &lt;NA&gt;         3"
  },
  {
    "objectID": "posts/week9_Report/index.html",
    "href": "posts/week9_Report/index.html",
    "title": "Video game review report",
    "section": "",
    "text": "This report summarises reviews submitted for Video Game products on Amazon from 1999 to 2018 made available by Ni et al. (2019). In total there are 497577 reviews in the dataset.\n\n\nThe below histogram shows the number of video game reviews submitted to Amazon by year. From 1999 reviews largely increased year-on-year which is unsurprising given the growth of Amazon and access to the internet. The dataset shows the peak number of reviews was 2015 with a decline from 2016 to 2018. It is likely that this reflects the dataset being incomplete for recent years rather than the number of reviews declining in reality.\n\n\n\n\n\n\n\n\nThe dataset contains details of whether the review was based on a verified purchase. From Amazon Community:\n\nAn “Amazon Verified Purchase” review means that we’ve verified that the person writing the review purchased the product from Amazon, and didn’t receive the product at a big discount. Reviews that are not marked “Amazon Verified Purchase” are valuable as well, but, either we cannot confirm that the product was purchased from Amazon, or that the customer paid a price that is available to most Amazon shoppers.\n\nTable 1 shows the number of reviews based on verified and unverified purchases.\n\n\n\n\nTable 1: Number of reviews by purchase status\n\n\nverified\ncounts\n\n\n\n\nFALSE\n164932\n\n\nTRUE\n332645\n\n\n\n\n\n\nWhilst the number of verified reviews is substantially larger than the number of unverified reviews, the below histogram demonstrates that this has not been a consistent trend and that the large increase in the number of reviews is largely driven by an increase in verified reviews.\n\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "posts/week9_Report/index.html#number-of-reviews-by-year",
    "href": "posts/week9_Report/index.html#number-of-reviews-by-year",
    "title": "Video game review report",
    "section": "",
    "text": "The below histogram shows the number of video game reviews submitted to Amazon by year. From 1999 reviews largely increased year-on-year which is unsurprising given the growth of Amazon and access to the internet. The dataset shows the peak number of reviews was 2015 with a decline from 2016 to 2018. It is likely that this reflects the dataset being incomplete for recent years rather than the number of reviews declining in reality."
  },
  {
    "objectID": "posts/week9_Report/index.html#verified-users",
    "href": "posts/week9_Report/index.html#verified-users",
    "title": "Video game review report",
    "section": "",
    "text": "The dataset contains details of whether the review was based on a verified purchase. From Amazon Community:\n\nAn “Amazon Verified Purchase” review means that we’ve verified that the person writing the review purchased the product from Amazon, and didn’t receive the product at a big discount. Reviews that are not marked “Amazon Verified Purchase” are valuable as well, but, either we cannot confirm that the product was purchased from Amazon, or that the customer paid a price that is available to most Amazon shoppers.\n\nTable 1 shows the number of reviews based on verified and unverified purchases.\n\n\n\n\nTable 1: Number of reviews by purchase status\n\n\nverified\ncounts\n\n\n\n\nFALSE\n164932\n\n\nTRUE\n332645\n\n\n\n\n\n\nWhilst the number of verified reviews is substantially larger than the number of unverified reviews, the below histogram demonstrates that this has not been a consistent trend and that the large increase in the number of reviews is largely driven by an increase in verified reviews.\n\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "posts/week9_Report/index.html#review-ratings",
    "href": "posts/week9_Report/index.html#review-ratings",
    "title": "Video game review report",
    "section": "Review ratings",
    "text": "Review ratings"
  },
  {
    "objectID": "posts/week9_Report/index.html#overall",
    "href": "posts/week9_Report/index.html#overall",
    "title": "Video game review report",
    "section": "Overall",
    "text": "Overall\nAmazon review ratings are provided on a scale of 1 (worst) to 5 (best) stars. The histogram below shows the total number of reviews assigned each rating."
  },
  {
    "objectID": "posts/week9_Report/index.html#by-purchase-status",
    "href": "posts/week9_Report/index.html#by-purchase-status",
    "title": "Video game review report",
    "section": "By purchase status",
    "text": "By purchase status\nHowever, if you break this data down by verified purchases status you can see that whilst the number of verified and unverified reviews with 1 to 4 star reviews are similar, there is a very large number of 5 star reviews for verified purchases compared to unverified purchases.\n\n#Get number of reviews per year\n\nrating_by_verified_counts &lt;- review_data %&gt;%\n  group_by(rating,verified) %&gt;%\n  summarize(counts = n())\n\n`summarise()` has grouped output by 'rating'. You can override using the\n`.groups` argument.\n\n#ggplot(data = reviews_by_year, mapping = aes(x=year, y=counts))\n#ggplot(reviews_by_year, aes(x=year, y=counts))\n\n# plot\nggplot(data = rating_by_verified_counts, \n       mapping = aes(x=rating, \n                     y=counts, \n                     group = verified,\n                     fill = verified))+\n  geom_bar(stat= \"identity\", position = \"dodge\")+\n  xlab(\"\")+\n  ylab(\"\")+\n  ggtitle(\"Review Ratings\",\n          subtitle = \"By purchase status\")+\n  theme(\n    panel.background = element_rect(fill = \"lightgrey\",\n                                colour = \"lightgrey\",\n                                linewidth = 0.5, linetype = \"solid\"),\n    panel.grid.major=element_line(colour=\"black\",linewidth = .05),\n    panel.grid.minor=element_line(colour=\"lightgrey\"))"
  },
  {
    "objectID": "posts/week9_Report/index.html#by-purchase-status-1",
    "href": "posts/week9_Report/index.html#by-purchase-status-1",
    "title": "Video game review report",
    "section": "By purchase status",
    "text": "By purchase status\nAverage ratings for verified reviews were higher (both mean and median) than for unverified review, likely driven by the number of 5-star reviews for verified reviews.\n\n\n\n\nTable 2: Average ratings by purchase status\n\n\nVerified\nMean rating\nMedian rating\n\n\n\n\nFALSE\n3.91\n4\n\n\nTRUE\n4.37\n5"
  },
  {
    "objectID": "posts/week9_Report/index.html#by-year-and-purchase-status",
    "href": "posts/week9_Report/index.html#by-year-and-purchase-status",
    "title": "Video game review report",
    "section": "By year and purchase status",
    "text": "By year and purchase status\nAverage ratings for verified purchases tended to increase over time, while average ratings for unverified purchases tended to decrease over time.\n\nyear_rating_status &lt;- review_data %&gt;%\n  group_by(year,verified) %&gt;%\n  summarise(mean_rating = mean(rating),.groups = 'drop')\n\n# plot\nggplot(data = year_rating_status, \n       mapping = aes(x=year, \n                     y=mean_rating, \n                     group = verified,\n                     color = verified))+\n  geom_line()+\n  geom_point()+\n  scale_x_continuous(breaks = 1999:2018)+\n  scale_color_manual(values = c('#1b9e77','#d95f02'))+\n  theme(axis.text.x = element_text(angle = 85, vjust = 1, hjust=1))+\n  xlab(\"\")+\n  ylab(\"\")+\n  ggtitle(\"Average Ratings\",\n          subtitle = \"By year and purchase status\")+\n  theme(\n    panel.background = element_rect(fill = \"lightgrey\",\n                                colour = \"lightgrey\",\n                                linewidth = 0.5, linetype = \"solid\"),\n    panel.grid.major=element_line(colour=\"black\",linewidth = .05),\n    panel.grid.minor=element_line(colour=\"lightgrey\"))"
  },
  {
    "objectID": "posts/week10_tidyr/week_10.html",
    "href": "posts/week10_tidyr/week_10.html",
    "title": "Data Tidying",
    "section": "",
    "text": "untidy_data &lt;- read_csv(\"data/untidy_data.csv\", show_col_types = FALSE)\n\nknitr::kable(untidy_data)\n\n\n\n\n\n\n\n\n\n\n\n\n\ncustomer_id\nitemsprice_2018\nitemsprice_2019\nitemsprice_2020\ntotalprice_2018\ntotalprice_2019\ntotalprice_2020\n\n\n\n\n1\n2 (3.91)\n8 (4.72)\n10 (5.59)\n7.82\n37.76\n55.90\n\n\n2\n1 (3.91)\n6 (4.72)\n1 (5.59)\n3.91\n28.32\n5.59\n\n\n3\n4 (3.91)\n5 (4.72)\n5 (5.59)\n15.64\n23.60\n27.95\n\n\n4\n10 (3.91)\n1 (4.72)\n3 (5.59)\n39.10\n4.72\n16.77\n\n\n5\n3 (3.91)\n9 (4.72)\n8 (5.59)\n11.73\n42.48\n44.72"
  },
  {
    "objectID": "posts/week10_tidyr/week_10.html#look-at-untidy-data",
    "href": "posts/week10_tidyr/week_10.html#look-at-untidy-data",
    "title": "Data Tidying",
    "section": "",
    "text": "untidy_data &lt;- read_csv(\"data/untidy_data.csv\", show_col_types = FALSE)\n\nknitr::kable(untidy_data)\n\n\n\n\n\n\n\n\n\n\n\n\n\ncustomer_id\nitemsprice_2018\nitemsprice_2019\nitemsprice_2020\ntotalprice_2018\ntotalprice_2019\ntotalprice_2020\n\n\n\n\n1\n2 (3.91)\n8 (4.72)\n10 (5.59)\n7.82\n37.76\n55.90\n\n\n2\n1 (3.91)\n6 (4.72)\n1 (5.59)\n3.91\n28.32\n5.59\n\n\n3\n4 (3.91)\n5 (4.72)\n5 (5.59)\n15.64\n23.60\n27.95\n\n\n4\n10 (3.91)\n1 (4.72)\n3 (5.59)\n39.10\n4.72\n16.77\n\n\n5\n3 (3.91)\n9 (4.72)\n8 (5.59)\n11.73\n42.48\n44.72"
  },
  {
    "objectID": "posts/week10_tidyr/week_10.html#look-at-tidy-data",
    "href": "posts/week10_tidyr/week_10.html#look-at-tidy-data",
    "title": "Data Tidying",
    "section": "look at tidy data",
    "text": "look at tidy data\n\ntidy_data &lt;- read_csv(\"data/tidy_data.csv\", show_col_types = FALSE)\n\nknitr::kable(tidy_data)\n\n\n\n\ncustomer_id\nyear\nitems\nprice_per_item\ntotalprice\n\n\n\n\n1\n2018\n2\n3.91\n7.82\n\n\n1\n2019\n8\n4.72\n37.76\n\n\n1\n2020\n10\n5.59\n55.90\n\n\n2\n2018\n1\n3.91\n3.91\n\n\n2\n2019\n6\n4.72\n28.32\n\n\n2\n2020\n1\n5.59\n5.59\n\n\n3\n2018\n4\n3.91\n15.64\n\n\n3\n2019\n5\n4.72\n23.60\n\n\n3\n2020\n5\n5.59\n27.95\n\n\n4\n2018\n10\n3.91\n39.10\n\n\n4\n2019\n1\n4.72\n4.72\n\n\n4\n2020\n3\n5.59\n16.77\n\n\n5\n2018\n3\n3.91\n11.73\n\n\n5\n2019\n9\n4.72\n42.48\n\n\n5\n2020\n8\n5.59\n44.72"
  },
  {
    "objectID": "posts/week10_tidyr/week_10.html#convert-messy-to-tidy",
    "href": "posts/week10_tidyr/week_10.html#convert-messy-to-tidy",
    "title": "Data Tidying",
    "section": "convert messy to tidy",
    "text": "convert messy to tidy\n\ntidy_data_2 &lt;- read_csv(file = \"data/untidy_data.csv\",\n                      show_col_types = FALSE) %&gt;%\n  pivot_longer(\n    cols = itemsprice_2018:totalprice_2020,\n    names_to = c(\"category\", \"year\"),\n    names_sep = \"_\", \n    values_to = \"value\", \n    names_transform = list(year = as.integer),\n    values_transform = list(value = as.character) \n  ) %&gt;%\n  pivot_wider(\n    id_cols = c(customer_id, year),\n    names_from = category,\n    values_from = value\n  ) %&gt;%\n  separate(\n    col = itemsprice,\n    into = c(\"items\", \"price_per_item\"),\n    sep = \" \", \n    remove = TRUE, \n    convert = TRUE\n  ) %&gt;%\n  mutate(\n    price_per_item = stringr::str_replace_all(\n      string = price_per_item, \n      pattern = \"[()]\", \n      replacement = \"\"\n    )\n  ) %&gt;%\n  type_convert(\n    trim_ws = TRUE\n  )\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  price_per_item = col_double(),\n  totalprice = col_double()\n)"
  }
]